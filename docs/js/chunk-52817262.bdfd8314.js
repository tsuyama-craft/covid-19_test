(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-52817262"],{4811:function(t,e,a){"use strict";a.r(e);var n=a("7a23"),i={class:"pagelink"},r=Object(n["g"])("新型コロナウイルス情報"),s=Object(n["h"])("a",null,"＞岡山県コロナ感染者詳細情報",-1),c={key:0},o={class:"Chart"},l={key:0,id:"chart",height:"100",width:"300"},d={key:1,canvas:"",id:"chart"},u=Object(n["h"])("br",null,null,-1),h=Object(n["h"])("br",null,null,-1),b={class:"filter"},f={style:{"white-space":"nowrap"},class:"filterkeyword"},O=Object(n["g"])("絞り込み"),j={class:"table1"},g={class:"detailbody"};function p(t,e,a,p,y,k){var v=Object(n["x"])("mainmenu"),x=Object(n["x"])("router-link");return Object(n["q"])(),Object(n["d"])(n["a"],null,[Object(n["h"])(v,{judge:"0"}),Object(n["h"])("div",i,[Object(n["h"])(x,{to:"/"},{default:Object(n["D"])((function(){return[r]})),_:1}),s]),t.$store.state.detaildata.length>0?(Object(n["q"])(),Object(n["d"])("h1",c,"岡山県コロナ感染者詳細情報")):Object(n["e"])("",!0),Object(n["h"])("button",{type:"button",onClick:e[1]||(e[1]=function(){return k.Back.apply(k,arguments)}),disabled:t.isTestDisabledBack},"前",8,["disabled"]),Object(n["h"])("button",{type:"button",onClick:e[2]||(e[2]=function(){return k.Next.apply(k,arguments)}),disabled:t.isTestDisabledNext},"次",8,["disabled"]),Object(n["h"])("div",o,[1==k.isLarge?(Object(n["q"])(),Object(n["d"])("canvas",l)):0==k.isLarge?(Object(n["q"])(),Object(n["d"])("canvas",d)):Object(n["e"])("",!0)]),u,h,Object(n["h"])("div",b,[Object(n["h"])("span",f,[O,Object(n["E"])(Object(n["h"])("input",{type:"text","onUpdate:modelValue":e[3]||(e[3]=function(e){return t.keyword=e})},null,512),[[n["B"],t.keyword]])])]),Object(n["h"])("table",j,[Object(n["h"])("thead",null,[Object(n["h"])("tr",null,[(Object(n["q"])(!0),Object(n["d"])(n["a"],null,Object(n["w"])(t.columnshead,(function(t){return Object(n["q"])(),Object(n["d"])("th",{key:t},Object(n["z"])(t),1)})),128))])]),Object(n["h"])("tbody",g,[(Object(n["q"])(!0),Object(n["d"])(n["a"],null,Object(n["w"])(k.reverseItems,(function(e){return Object(n["q"])(),Object(n["d"])("tr",{key:e},[(Object(n["q"])(!0),Object(n["d"])(n["a"],null,Object(n["w"])(t.columns,(function(t,a){return Object(n["q"])(),Object(n["d"])("td",{key:a},Object(n["z"])(e[a]),1)})),128))])})),128))])])],64)}a("99af"),a("4de4"),a("c975"),a("d81d"),a("13d5"),a("fb6a"),a("a434");var y=a("30ef"),k=a.n(y),v=a("ad3a");function x(t,e,a){for(var n=[],i=0;i<e.length;i++)n[i]=e[i].slice(0,7);for(var r=n.filter((function(t,e,a){return a.indexOf(t)===e})),s=0;s<e.length;s++)e[s].slice(0,7)!=r[r.length-1-a]&&(e.splice(s,1),t.splice(s,1),s-=1);return{data:t,label:e,LabelLen:r.length}}function C(t,e,a){t.data.labels=e,t.data.datasets[0].data=a,t.update()}var m={name:"Detailpage",components:{mainmenu:v["a"]},data:function(){var t={"公表年月日":"公表年月日","患者＿居住地":"患者＿居住地","患者＿年代":"患者＿年代","患者＿性別":"患者＿性別"};return{columnshead:["公表年月日","居住地","年代","性別"],keyword:"",isTestDisabledBack:!1,isTestDisabledNext:!0,kenDetails:this.$store.state.detaildata,columns:t,tasks:this.$store.state.detaildata2,count:0}},methods:{listCategoryCreat:function(t){for(var e=0;e<this.kenDetails.length;e++)""==this.kenDetails[e]["日別の感染者数"]&&(this.kenDetails[e]["日別の感染者数"]=0);var a=this.kenDetails.map((function(e){return[e[t]]})).reduce((function(t,e){return t.concat(e)}));return a},Next:function(){this.count=this.count-1,this.count<=0?(this.isTestDisabledNext=!0,this.isTestDisabledBack=!1,this.count=0):(this.isTestDisabledNext=!1,this.isTestDisabledBack=!1)},Back:function(){this.count=this.count+1,this.count>=this.CountLength-1?(this.isTestDisabledBack=!0,this.isTestDisabledNext=!1,this.count=this.CountLength-1):(this.isTestDisabledBack=!1,this.isTestDisabledNext=!1)},CreateChart:function(){var t=this.listCategoryCreat("集計時点_年月日"),e=this.listCategoryCreat("日別の感染者数");t=t.filter(Boolean);var a=x(e,t,this.count);this.CountLength=a.LabelLen;var n={type:"bar",data:{labels:a.label,datasets:[{data:a.data,backgroundColor:"rgba(54, 162, 235, 0.2)",borderColor:"rgb(54, 162, 235)",borderWidth:1,label:"新規感染者数"}]},options:{plugins:{pan:{enabled:!0,mode:"xy"},zoom:{enabled:!0,drag:!0,mode:"xy"}},scales:{yAxes:[{ticks:{beginAtZero:!0,userCallback:function(t){if(Math.floor(t)===t)return t},fontSize:15,suggestedMax:50,stepSize:10}}]}}};this.Chart=new k.a(document.getElementById("chart").getContext("2d"),n)}},computed:{reverseItems:function(){var t=[];for(var e in this.tasks){var a=this.tasks[e];-1===a.公表年月日.indexOf(this.keyword)&&-1===a.患者＿居住地.indexOf(this.keyword)&&-1===a.患者＿年代.indexOf(this.keyword)&&-1===a.患者＿性別.indexOf(this.keyword)||t.push(a)}return t.slice().reverse()},isLarge:function(){return!!window.matchMedia("(min-width: 480px)").matches}},watch:{count:function(){var t=this.listCategoryCreat("集計時点_年月日"),e=this.listCategoryCreat("日別の感染者数"),a=x(e,t,this.count);C(this.Chart,a.label,a.data)}},mounted:function(){this.CreateChart()}};a("85f8");m.render=p;e["default"]=m},"4de4":function(t,e,a){"use strict";var n=a("23e7"),i=a("b727").filter,r=a("1dde"),s=a("ae40"),c=r("filter"),o=s("filter");n({target:"Array",proto:!0,forced:!c||!o},{filter:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},"85f8":function(t,e,a){"use strict";a("b652")},a434:function(t,e,a){"use strict";var n=a("23e7"),i=a("23cb"),r=a("a691"),s=a("50c4"),c=a("7b0b"),o=a("65f0"),l=a("8418"),d=a("1dde"),u=a("ae40"),h=d("splice"),b=u("splice",{ACCESSORS:!0,0:0,1:2}),f=Math.max,O=Math.min,j=9007199254740991,g="Maximum allowed length exceeded";n({target:"Array",proto:!0,forced:!h||!b},{splice:function(t,e){var a,n,d,u,h,b,p=c(this),y=s(p.length),k=i(t,y),v=arguments.length;if(0===v?a=n=0:1===v?(a=0,n=y-k):(a=v-2,n=O(f(r(e),0),y-k)),y+a-n>j)throw TypeError(g);for(d=o(p,n),u=0;u<n;u++)h=k+u,h in p&&l(d,u,p[h]);if(d.length=n,a<n){for(u=k;u<y-n;u++)h=u+n,b=u+a,h in p?p[b]=p[h]:delete p[b];for(u=y;u>y-n+a;u--)delete p[u-1]}else if(a>n)for(u=y-n;u>k;u--)h=u+n-1,b=u+a-1,h in p?p[b]=p[h]:delete p[b];for(u=0;u<a;u++)p[u+k]=arguments[u+2];return p.length=y-n+a,d}})},b652:function(t,e,a){},c975:function(t,e,a){"use strict";var n=a("23e7"),i=a("4d64").indexOf,r=a("a640"),s=a("ae40"),c=[].indexOf,o=!!c&&1/[1].indexOf(1,-0)<0,l=r("indexOf"),d=s("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:o||!l||!d},{indexOf:function(t){return o?c.apply(this,arguments)||0:i(this,t,arguments.length>1?arguments[1]:void 0)}})},fb6a:function(t,e,a){"use strict";var n=a("23e7"),i=a("861d"),r=a("e8b5"),s=a("23cb"),c=a("50c4"),o=a("fc6a"),l=a("8418"),d=a("b622"),u=a("1dde"),h=a("ae40"),b=u("slice"),f=h("slice",{ACCESSORS:!0,0:0,1:2}),O=d("species"),j=[].slice,g=Math.max;n({target:"Array",proto:!0,forced:!b||!f},{slice:function(t,e){var a,n,d,u=o(this),h=c(u.length),b=s(t,h),f=s(void 0===e?h:e,h);if(r(u)&&(a=u.constructor,"function"!=typeof a||a!==Array&&!r(a.prototype)?i(a)&&(a=a[O],null===a&&(a=void 0)):a=void 0,a===Array||void 0===a))return j.call(u,b,f);for(n=new(void 0===a?Array:a)(g(f-b,0)),d=0;b<f;b++,d++)b in u&&l(n,d,u[b]);return n.length=d,n}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,