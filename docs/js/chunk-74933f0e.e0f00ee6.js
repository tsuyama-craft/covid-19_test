(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-74933f0e"],{"0d59":function(t,e,a){"use strict";a("9b4f")},"14c3":function(t,e,a){var r=a("c6b6"),n=a("9263");t.exports=function(t,e){var a=t.exec;if("function"===typeof a){var c=a.call(t,e);if("object"!==typeof c)throw TypeError("RegExp exec method returned something other than an Object or null");return c}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return n.call(t,e)}},"466d":function(t,e,a){"use strict";var r=a("d784"),n=a("825a"),c=a("50c4"),i=a("1d80"),s=a("8aa5"),o=a("14c3");r("match",1,(function(t,e,a){return[function(e){var a=i(this),r=void 0==e?void 0:e[t];return void 0!==r?r.call(e,a):new RegExp(e)[t](String(a))},function(t){var r=a(e,t,this);if(r.done)return r.value;var i=n(t),u=String(this);if(!i.global)return o(i,u);var l=i.unicode;i.lastIndex=0;var d,h=[],f=0;while(null!==(d=o(i,u))){var g=String(d[0]);h[f]=g,""===g&&(i.lastIndex=s(u,c(i.lastIndex),l)),f++}return 0===f?null:h}]}))},"5c49":function(t,e,a){},6547:function(t,e,a){var r=a("a691"),n=a("1d80"),c=function(t){return function(e,a){var c,i,s=String(n(e)),o=r(a),u=s.length;return o<0||o>=u?t?"":void 0:(c=s.charCodeAt(o),c<55296||c>56319||o+1===u||(i=s.charCodeAt(o+1))<56320||i>57343?t?s.charAt(o):c:t?s.slice(o,o+2):i-56320+(c-55296<<10)+65536)}};t.exports={codeAt:c(!1),charAt:c(!0)}},"8aa5":function(t,e,a){"use strict";var r=a("6547").charAt;t.exports=function(t,e,a){return e+(a?r(t,e).length:1)}},9263:function(t,e,a){"use strict";var r=a("ad6d"),n=a("9f7f"),c=RegExp.prototype.exec,i=String.prototype.replace,s=c,o=function(){var t=/a/,e=/b*/g;return c.call(t,"a"),c.call(e,"a"),0!==t.lastIndex||0!==e.lastIndex}(),u=n.UNSUPPORTED_Y||n.BROKEN_CARET,l=void 0!==/()??/.exec("")[1],d=o||l||u;d&&(s=function(t){var e,a,n,s,d=this,h=u&&d.sticky,f=r.call(d),g=d.source,p=0,b=t;return h&&(f=f.replace("y",""),-1===f.indexOf("g")&&(f+="g"),b=String(t).slice(d.lastIndex),d.lastIndex>0&&(!d.multiline||d.multiline&&"\n"!==t[d.lastIndex-1])&&(g="(?: "+g+")",b=" "+b,p++),a=new RegExp("^(?:"+g+")",f)),l&&(a=new RegExp("^"+g+"$(?!\\s)",f)),o&&(e=d.lastIndex),n=c.call(h?a:d,b),h?n?(n.input=n.input.slice(p),n[0]=n[0].slice(p),n.index=d.lastIndex,d.lastIndex+=n[0].length):d.lastIndex=0:o&&n&&(d.lastIndex=d.global?n.index+n[0].length:e),l&&n&&n.length>1&&i.call(n[0],a,(function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(n[s]=void 0)})),n}),t.exports=s},"9b4f":function(t,e,a){},"9f7f":function(t,e,a){"use strict";var r=a("d039");function n(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=r((function(){var t=n("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),e.BROKEN_CARET=r((function(){var t=n("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},ac1f:function(t,e,a){"use strict";var r=a("23e7"),n=a("9263");r({target:"RegExp",proto:!0,forced:/./.exec!==n},{exec:n})},ad6d:function(t,e,a){"use strict";var r=a("825a");t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},b263:function(t,e,a){"use strict";a("5c49")},ca12:function(t,e,a){"use strict";a.r(e);var r=a("7a23"),n={class:"pagelink"},c=Object(r["g"])("新型コロナウイルス情報"),i=Object(r["h"])("a",null,"＞市町村別コロナ感染者数",-1),s=Object(r["h"])("h1",null,"市町村別コロナ感染者数",-1);function o(t,e,a,o,u,l){var d=Object(r["x"])("mainmenu"),h=Object(r["x"])("router-link"),f=Object(r["x"])("ChartHorBar");return Object(r["q"])(),Object(r["d"])(r["a"],null,[Object(r["h"])(d,{judge:"0"}),Object(r["h"])("div",n,[Object(r["h"])(h,{to:"/"},{default:Object(r["D"])((function(){return[c]})),_:1}),i]),s,Object(r["h"])(f)],64)}var u=Object(r["h"])("div",{class:"HorChart"},[Object(r["h"])("canvas",{id:"chart"})],-1);function l(t,e,a,n,c,i){return Object(r["q"])(),Object(r["d"])(r["a"],null,[Object(r["h"])("button",{id:"button1",onClick:e[1]||(e[1]=function(){return i.push1.apply(i,arguments)})},"新規"),Object(r["h"])("button",{id:"button2",onClick:e[2]||(e[2]=function(){return i.push2.apply(i,arguments)})},"累計"),u],64)}a("99af"),a("d81d"),a("13d5"),a("ac1f"),a("466d");var d=a("30ef"),h=a.n(d);function f(t,e){var a,r,n=e,c=t[t.length-1].match(n);return a=null==c?0:c.length,r=a,r}function g(t,e){for(var a,r,n=e,c=0,i=0;i<t.length;i++){var s=t[i].match(n);a=null==s?0:s.length,c+=a}return r=c,r}function p(t){for(var e,a=[],r=[],n=0;n<27;n++){switch(n){case 0:e=/津山市/g;break;case 1:e=/鏡野町/g;break;case 2:e=/勝央町/g;break;case 3:e=/奈義町/g;break;case 4:e=/久米南町/g;break;case 5:e=/美咲町/g;break;case 6:e=/岡山市/g;break;case 7:e=/倉敷市/g;break;case 8:e=/玉野市/g;break;case 9:e=/笠岡市/g;break;case 10:e=/井原市/g;break;case 11:e=/総社市/g;break;case 12:e=/高梁市/g;break;case 13:e=/新見市/g;break;case 14:e=/備前市/g;break;case 15:e=/瀬戸内市/g;break;case 16:e=/赤磐市/g;break;case 17:e=/真庭市/g;break;case 18:e=/美作市/g;break;case 19:e=/浅口市/g;break;case 20:e=/和気町/g;break;case 21:e=/早島市/g;break;case 22:e=/里庄町/g;break;case 23:e=/矢掛町/g;break;case 24:e=/新庄村/g;break;case 25:e=/西粟倉村/g;break;case 26:e=/吉備中央町/g;break}a[n]=f(t,e),r[n]=g(t,e)}return{NewData:a,TotalData:r}}var b={name:"ChartHorBar",data:function(){return{kenDetails:this.$store.state.detaildata}},methods:{listCategoryCreat:function(t){var e=this.kenDetails.map((function(e){return[e[t]]})).reduce((function(t,e){return t.concat(e)}));return e},renderChart:function(){var t=this.listCategoryCreat("市区町村名"),e=p(t);this.chart&&this.chart.destroy();var a=document.getElementById("chart").getContext("2d");this.chart=new h.a(a,{type:"horizontalBar",data:{labels:["津山市","鏡野町","勝央町","奈義町","久米南町","美咲町","岡山市","倉敷市","玉野市","笠岡市","井原市","総社市","高梁市","新見市","備前市","瀬戸内市","赤磐市","真庭市","美作市","浅口市","和気町","早島町","里庄町","矢掛町","新庄村","西粟倉村","吉備中央町"],datasets:[{label:"感染者数",data:e.NewData,backgroundColor:"rgba(75, 192, 192, 0.2)",borderColor:"rgb(75, 192, 192)",borderWidth:1}]},options:{plugins:{pan:{enabled:!0,mode:"xy"},zoom:{enabled:!0,drag:!0,mode:"xy"}},tooltips:{mode:"index",axis:"y"},scales:{yAxes:[{stacked:!0,ticks:{fontSize:15}}],xAxes:[{ticks:{beginAtZero:!0,fontSize:15,suggestedMax:100,stepSize:50}}]}}})},push1:function(){var t=this.listCategoryCreat("市区町村名"),e=p(t);this.chart.data.datasets[0].data=e.NewData,this.chart.options.scales.xAxes[0].ticks.suggestedMax=100,this.chart.options.scales.xAxes[0].ticks.stepSize=50,this.chart.update()},push2:function(){var t=this.listCategoryCreat("市区町村名"),e=p(t);this.chart.data.datasets[0].data=e.TotalData,this.chart.options.scales.xAxes[0].ticks.suggestedMax=3e4,this.chart.options.scales.xAxes[0].ticks.stepSize=2e3,this.chart.update()}},computed:{isLarge:function(){return!!window.matchMedia("(min-width: 480px)").matches}},mounted:function(){this.renderChart()}};a("b263");b.render=l;var x=b,v=a("ad3a"),k={components:{ChartHorBar:x,mainmenu:v["a"]}};a("0d59");k.render=o;e["default"]=k},d784:function(t,e,a){"use strict";a("ac1f");var r=a("6eeb"),n=a("d039"),c=a("b622"),i=a("9263"),s=a("9112"),o=c("species"),u=!n((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),l=function(){return"$0"==="a".replace(/./,"$0")}(),d=c("replace"),h=function(){return!!/./[d]&&""===/./[d]("a","$0")}(),f=!n((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var a="ab".split(t);return 2!==a.length||"a"!==a[0]||"b"!==a[1]}));t.exports=function(t,e,a,d){var g=c(t),p=!n((function(){var e={};return e[g]=function(){return 7},7!=""[t](e)})),b=p&&!n((function(){var e=!1,a=/a/;return"split"===t&&(a={},a.constructor={},a.constructor[o]=function(){return a},a.flags="",a[g]=/./[g]),a.exec=function(){return e=!0,null},a[g](""),!e}));if(!p||!b||"replace"===t&&(!u||!l||h)||"split"===t&&!f){var x=/./[g],v=a(g,""[t],(function(t,e,a,r,n){return e.exec===i?p&&!n?{done:!0,value:x.call(e,a,r)}:{done:!0,value:t.call(a,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:l,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:h}),k=v[0],E=v[1];r(String.prototype,t,k),r(RegExp.prototype,g,2==e?function(t,e){return E.call(t,this,e)}:function(t){return E.call(t,this)})}d&&s(RegExp.prototype[g],"sham",!0)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,